:root{
    --primary-color: #FF7833;
    --secondary-color: #31333B;
    --secondary-color-light: #444856;
    --secondary-color-dark: #23252D;

    --default-gap: 3rem;
}

html{
    font-size: 62.5%;
}

body{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    display: flex;
    color: #e7e7e7;
    background-color: #ccc;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    min-height: 100vh;
    line-height: 1.7rem;
    background-image: url(../imagens/ProjetoMyComponents-inicio/imagens/bg-unsplash.png);
    background-repeat: no-repeat;
    background-size: cover;
    background-attachment: fixed;
}

h1{
    font-size: 4rem;
    color: #7b7b7b;
    margin: 2.4rem 0 4.8rem;
}

h2, h3, h4, h5, h6{
    color: var(--primary-color);
}

h2{
    margin-top: 1rem;
}

.highlight{
    border-left: 1px solid var(--primary-color);
    font-size: 1.1em;
    padding: 0 0 0 2em; /* definiu este atributo porque o padding do article logo abaixo estava atrpalhando o título highlight */
    margin-bottom: 2em;
}

article{
    padding-top: 1em; 
    padding-bottom: 1em;
    /* esses paddigns estão atrapalhando a formatação dos cards. O professor usou como exemplo para reforçar para nunca usar a tag HTML no css. Sempre utilizar a classe */
}

section{
    margin-bottom: 3rem;
}

.underline{
    text-decoration: red wavy underline 2px;
}

.main-header{
    flex: 0 0 26rem;
    background-color: rgba(49, 51, 59, .8);   
}

.main-content{
    background-color: rgba(68, 72, 86, .8);
    flex: 1 0;
    padding: 6.5rem 6rem 7.5rem;
}

a{
    color: inherit;
}

.main-header, .main-content{
    font-size: 1.6rem;
}

.perfil-img{
    max-width: 10rem;
}

 .main-nav{
    text-align: right;
    padding: 6.5rem 2.4rem 2.4rem;
    top: 0;
    left: 0;
    position: sticky;
}

.main-nav ul{
    list-style-type: none;
    padding: 0;
} 

.main-nav ul a{
    display: block;
    padding: 1.2rem 0;
    text-decoration: none;
    background-color: transparent;
    transition: padding-right .3s, background-color .3s;
}

.main-nav ul a:hover, 
.main-nav ul a:focus{
    background-color: var(--secondary-color-light);
    padding-right: 1rem;
}

.main-nav li{
    border-bottom: 2px solid #7b7b7b;
    padding: .4rem 0;
}

.card{
    max-width: 74rem; /* utilizou o tamanho em pixels porque a imagem tem um tamanho máximo em pixels */
    background-color: var(--secondary-color);
    padding: 0; /* esse padding está sobrescrevendo o padding do article definido anteriormente */
}

@media (max-width: 74rem) {
    .row{
        flex-wrap: wrap;
    }
    .card {
        max-width: 100%;
    } 
}

.card_content{
    padding: .5rem 1rem 1rem;
}

.card_content p, .card_title{
    margin: 0; /* tirou a margem entre os elementos para corrigir o espaçamento definido em card_content */
}

.card_title{
    font-size: 1.5em;
    margin: .5em 0;
}

.row{
    display: flex;
    gap: var(--default-gap);
    padding-top: 1.5rem;
    justify-content: space-between;
}

/* .row .row{
    padding-top: 0;
} */

.card img{
    max-width: 100%; /* faz com que a imagem se adapte ao tamanho do container, odebedecendo o tamanho máximo da própria imagem */
}

.row > *{ /* pega qualquer elemento que for filho da classe row */
    flex-grow: 1; /* pega todo espaço que excede */
    flex-shrink: 0;
    flex-basis: 0%;
    /* este bloco de código faz com que todas as colunas fiquem com o mesmo tamanho, independentemente do contéudo */

    /*flex: 1 0 0%; atalho para o bloco de código acima  */
}

.alternate{
    list-style-type: none;
    padding-left: 0;
}

.alternate li{
     padding: 0;
}

.alternate li:not(:last-child){/* não aplica o border-bottom no último elemento */
    border-bottom: 2px solid;
}

.roman{
    list-style: upper-roman;
}

.list-emoji{
    list-style-type: "\1F642";
}

input, label, textarea, select{
    display: inline-block;
    width: 100%;
    box-sizing: border-box;
}

input[type = "radio"],
input[type = "checkbox"]{/* reseta a configuração dos radio, já que acima os inputs foram definidos com display inline-block para que ficassem organizados */
    display: inline;
    width: auto; /* largura dependente do próprio conteúdo */
}

input, textarea, select{
    background-color: #ccc;
    padding: 1.2rem;
    border-radius: 5px;
    margin-bottom: 1.6rem;
    border: none;
}

label{
    padding-bottom: 1rem;
}

.btn{
    background-color: var(--secondary-color);
    border: 2px solid var(--secondary-color-dark);
    color: white;
    font-size: 1.2rem;
    cursor: pointer;
    /* padding: 1.2rem; */
    padding: .8em 1.2em;
    border-radius: 5px;
}

.btn + .btn{/* coloca margin-left nos elementos btn que vêm imediatamente após outros btn */
    margin-left: 2rem;
}

.btn:hover,
.btn:focus{
    background-color: var(--secondary-color-dark);
}

.form-quiz{
    /* width: calc(50% - 1.5rem); */
    width: calc(50% - (var(--default-gap)/2)); /*subtrai do width de 50%  1.5 rem que é metade do gap da classe row. Assim, o form-quiz fica com o tamanho exato da metade da div row que segura o formuláriod e contato */
}

.btn-stroke{
    background-color: transparent;
}

.btn-big{
    font-size: 1.6rem;
}

.btn-full{
    display: inline-block;
    width: 100%;
    box-sizing: border-box;
}

.btn-full + .btn-full{/* zera o margin-left de todo btn-full que vem imediatamente após outro btn-full */
    margin-left: 0;
    margin-top: 2rem;
}

.table{
    width: 100%;
    border-collapse: collapse;
}

table td:last-child,
table th:last-child{
    text-align: right;
}

.table td,
.table th{
    padding: 1em;   
}

.table:not(.table-alternate) td,
.table:not(.table-alternate) th{
    border-bottom: 2px solid var(--secondary-color-dark);
}

.table th{
    text-transform: uppercase;
    text-align: left;
}

/* .table tr:last-child td{
    border-bottom: none;
} */

.table-alternate tbody tr:nth-child(odd){
    background-color: var(--secondary-color);
}

.table-verticalLines td:not(:last-child),
.table-verticalLines th:not(:last-child){
    border-right: 1px solid var(--secondary-color-dark);
}


